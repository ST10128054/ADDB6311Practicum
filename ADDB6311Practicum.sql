//query to create the INSTRUCTORp table
CREATE TABLE INSTRUCTORp (
    INS_ID int PRIMARY KEY NOT NULL,
    INS_FNAME varchar(255) NOT NULL,
    INS_SNAME varchar(255) NOT NULL,
    INS_CONTACT INT NOT NULL,
    INS_LEVEL INT NOT NULL
);
//query to create the CUSTOMERp table
CREATE TABLE CUSTOMERp (
    CUST_ID varchar(255) PRIMARY KEY NOT NULL,
    CUST_FNAME varchar(255) NOT NULL,
    CUST_SNAME varchar(255) NOT NULL,
    CUST_ADDRESS varchar(255) NOT NULL,
    CUST_CONTACT int NOT NULL
);
//query to create the DIVEp table
CREATE TABLE DIVEp (
    DIVE_ID int PRIMARY KEY NOT NULL,
    DIVE_NAME varchar(255) NOT NULL,
    DIVE_DURATION varchar(255) NOT NULL,
    DIVE_LOCATION varchar(255)NOT NULL,
    DIVE_EXP_LEVEL INT NOT NULL,
    DIVE_COST INT NOT NULL
);
//query to create the DIVE_EVENTp table
CREATE TABLE DIVE_EVENTp (
    DIVE_EVENT_ID varchar(255) PRIMARY KEY NOT NULL,
    DIVE_DATE DATE NOT NULL,
    DIVE_PARTICIPANTS INT NOT NULL,
    INS_ID int NOT NULL,
    CUST_ID varchar(225) NOT NULL,
    DIVE_ID int NOT NULL,
    FOREIGN KEY (INS_ID) REFERENCES INSTRUCTORp(INS_ID),
    FOREIGN KEY (CUST_ID) REFERENCES CUSTOMERp(CUST_ID),
    FOREIGN KEY (DIVE_ID) REFERENCES DIVEp(DIVE_ID)
);
//query to insert values into the INSTRUCTORp table
INSERT INTO INSTRUCTORp(INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL)
VALUES (101, 'James', 'Willis', 0843569851, 7);
INSERT INTO INSTRUCTORp(INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL)
VALUES (102, 'Sam', 'Wait', 0763698521, 2);
INSERT INTO INSTRUCTORp(INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL)
VALUES (103, 'Sally', 'Gumede', 0786598521, 8);
INSERT INTO INSTRUCTORp(INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL)
VALUES (104, 'Bob', 'Du Preez', 0796369857, 3);
INSERT INTO INSTRUCTORp(INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL)
VALUES (105, 'Simon', 'Jones', 0826598741, 9);
//query to insert values into the CUSTOMERp table
INSERT INTO CUSTOMERp(CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C115', 'Heinrich', 'Willis', '3 Main Road',0821253659 );
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C116', 'David', 'Watson', '13 Cape Road', 0769658547);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C117', 'Waldo', 'Smith', '3 Mountain Road', 0863256574);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C118', 'Alex ', 'Hanson', '8 Circle Road', 0762356587);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C119', 'Kuhle', 'Bitterhout', '15 Main Road', 0821235258);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C120', 'Thando', 'Zolani', '88 Summer Road', 0847541254);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C121', 'Phillip', 'Jackson', '3 Long Road', 0745556658);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C122', 'Sarah', 'Jones', '7 Sea Road', 0814745745);
INSERT INTO CUSTOMERp( CUST_ID, CUST_FNAME, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT)
VALUES('C123', 'Catherine', 'Howard', '31 Lake Side Road', 0822232521);
//query to insert values into the DIVEp table
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(550, 'Shark Dive', '3 hours', 'Shark Point', 8, 500);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(551, 'Coral Dive', '1 hour', 'Break Point', 7, 300);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(552, 'Wave Crescent', '2 hours', 'Ship wreck rally', 3, 800);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(553, 'Underwater Adventure', '1 hour', 'Coral ally', 2, 250);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(554, 'Underwater Adventure', '3 hours', 'Sandy beach', 3, 750);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(555, 'Deep Blue Ocean', '30 minutes', 'Lazy waves', 2, 120);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(556, 'Rough Seas', '1 hour', 'Pipe', 9, 700);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(557, 'White Water', '2 hours', 'Drifts', 5, 200);
INSERT INTO DIVEp(DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST)
VALUES(558, 'Current Adventure', '2 hours', 'Rock Lands', 3, 150);
//query to insert values into the DIVE_EVENTp table
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_101', TO_DATE('15/JUL/17', 'dd/MM/yyyy'), 5, 103, 'C115', 558);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_102', TO_DATE('16/JUL/17', 'dd/MM/yyyy'), 7, 104, 'C117', 555);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_103', TO_DATE('18/JUL/17', 'dd/MM/yyyy'), 8, 101, 'C118', 552);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_104', TO_DATE('19/JUL/17', 'dd/MM/yyyy'), 3, 104, 'C119', 551);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_105', TO_DATE('21/JUL/17', 'dd/MM/yyyy'), 5, 105, 'C121', 558);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_106', TO_DATE('22/JUL/17', 'dd/MM/yyyy'), 8, 105, 'C120', 556);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_107', TO_DATE('25/JUL/17', 'dd/MM/yyyy'), 10, 105, 'C115', 554);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_108', TO_DATE('27/JUL/17', 'dd/MM/yyyy'), 5, 101, 'C122', 552);
INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_109', TO_DATE('28/JUL/17', 'dd/MM/yyyy'), 3, 102, 'C123', 553);

//Q2
CREATE ROLE C##ADMIN IDENTIFIED BY admin2017;
GRANT CONNECT TO C##ADMIN;
GRANT CREATE SESSION TO C##ADMIN;
GRANT SELECT ANY TABLE TO C##ADMIN;

CREATE ROLE C##USER IDENTIFIED BY user2017;
GRANT CONNECT TO C##USER;
GRANT CREATE SESSION TO C##USER;
GRANT SELECT ANY TABLE TO C##USER;

//Q3
//select query to printo out information from the tables
SELECT 
    INSTRUCTORp.INS_FNAME || ', ' || INSTRUCTORp.INS_SNAME AS INSTRUCTOR,
    CUSTOMERp.CUST_FNAME || ', ' || CUSTOMERp.CUST_SNAME AS CUSTOMER,
    DIVEp.DIVE_LOCATION,
    DIVE_EVENTp.DIVE_PARTICIPANTS
FROM 
    DIVE_EVENTp
//Joining the different tables togeter
JOIN 
    INSTRUCTORp ON DIVE_EVENTp.INS_ID = INSTRUCTORp.INS_ID
JOIN    
    CUSTOMERp ON DIVE_EVENTp.CUST_ID = CUSTOMERp.CUST_ID
JOIN    
    DIVEp ON DIVE_EVENTp.DIVE_ID = DIVEp.DIVE_ID
//Where clause to find participants between 8 and 10
WHERE 
    DIVE_EVENTp.DIVE_PARTICIPANTS BETWEEN 8 AND 10;

//Q4
SET SERVEROUTPUT ON;
DECLARE 
    V_DIVE_NAME varchar(255);
    V_DIVE_DATE DATE;
    V_PARTICIPANTS INT;
BEGIN
    SELECT d.DIVE_NAME, de.DIVE_DATE, de.DIVE_PARTICIPANTS
    INTO V_DIVE_NAME, V_DIVE_DATE, V_PARTICIPANTS
    FROM DIVE_EVENTp de
    INNER JOIN DIVEp d ON de.DIVE_ID = d.DIVE_ID
    WHERE de.DIVE_PARTICIPANTS > 9;
    
    DBMS_OUTPUT.PUT_LINE('DIVE NAME: ' || V_DIVE_NAME);
    DBMS_OUTPUT.PUT_LINE('DIVE DATE: ' || V_DIVE_DATE);
    DBMS_OUTPUT.PUT_LINE('PARTICIPANTS: ' || V_PARTICIPANTS);
    DBMS_OUTPUT.PUT_LINE('-------------------------------------');
END;

//Q5
SET SERVEROUTPUT ON;
DECLARE 
    V_CUSTOMER varchar(255);
    V_DIVE_NAME varchar(255);
    V_PARTICIPANTS INT;
    V_STATUS INT;
    V_DIVE_COST INT;
BEGIN
    FOR rec IN (SELECT c.CUST_FNAME || ', ' || c.CUST_SNAME AS CUSTOMER,
                d.DIVE_NAME, de.DIVE_PARTICIPANTS
                INTO V_CUSTOMER, V_DIVE_NAME, V_PARTICIPANTS
                FROM DIVE_EVENTp de
                JOIN CUSTOMERp c ON de.CUST_ID = c.CUST_ID
                JOIN DIVEp d ON de.DIVE_ID = d.DIVE_ID
                WHERE d.DIVE_COST > 500)
    LOOP
        V_CUSTOMER := rec.CUSTOMER;
        V_DIVE_NAME := rec.DIVE_NAME;
        V_PARTICIPANTS := rec.DIVE_PARTICIPANTS;
        
        DBMS_OUTPUT.PUT_LINE('CUSTOMER : ' || V_CUSTOMER);
        DBMS_OUTPUT.PUT_LINE('DIVE NAME : ' || V_DIVE_NAME);
        DBMS_OUTPUT.PUT_LINE('PARTICIPANT : ' || V_PARTICIPANTS);
        
        IF V_PARTICIPANTS <= 4 THEN
            V_STATUS := 1;
            DBMS_OUTPUT.PUT_LINE('STATUS :' || V_STATUS || ' instructors required');
        ELSIF V_PARTICIPANTS BETWEEN 5 AND 7 THEN
            V_STATUS := 2;
            DBMS_OUTPUT.PUT_LINE('STATUS :' || V_STATUS || ' instructors required');
        ELSIF V_PARTICIPANTS >= 8 THEN
            V_STATUS := 3;    
            DBMS_OUTPUT.PUT_LINE('STATUS :' || V_STATUS || ' instructors required');
        ELSE 
            V_STATUS := 0;  
        END IF;
        DBMS_OUTPUT.PUT_LINE('-------------------------------------------------');
    END LOOP;
END;
//Q6
CREATE VIEW Vw_Dive_Event AS
SELECT i.INS_ID,
       c.CUST_ID,
       c.CUST_ADDRESS,
       d.DIVE_DURATION,
       de.DIVE_DATE
FROM DIVE_EVENTp de
JOIN INSTRUCTORp i ON de.INS_ID = i.INS_ID
JOIN CUSTOMERp c ON de.CUST_ID = c.CUST_ID
JOIN DIVEp d ON de.DIVE_ID = d.DIVE_ID
WHERE TRUNC(de.DIVE_DATE) < TO_DATE('19/JUL/17', 'dd/MM/yyyy');

SELECT * FROM Vw_Dive_Event;
//Q7
CREATE OR REPLACE TRIGGER New_Dive_Event
BEFORE INSERT OR UPDATE ON DIVE_EVENTp
FOR EACH ROW
BEGIN
    IF :NEW.DIVE_PARTICIPANTS <= 0 AND :NEW.DIVE_PARTICIPANTS > 20 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Dive participants must not be negative and must be less than 20.');
    END IF;
END;

INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_110', TO_DATE('28/JUL/17', 'dd/MM/yyyy'), -3, 104, 'C123', 558);

INSERT INTO DIVE_EVENTp(DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID)
VALUES('de_110', TO_DATE('28/JUL/17', 'dd/MM/yyyy'), 24, 104, 'C123', 558);
//Q8
CREATE OR REPLACE PROCEDURE sp_Customer_Details 
(P_CUST_ID IN CUSTOMERp.CUST_ID%TYPE, P_DIVE_DATE IN DIVE_EVENTp.DIVE_DATE%TYPE)
IS
    V_CUST_NAME varchar(255);
    V_DIVE_NAME DIVEp.DIVE_NAME%TYPE;
    V_DIVE_DATE DIVE_EVENTp.DIVE_DATE%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Input Customer ID number: ' || P_CUST_ID);
    DBMS_OUTPUT.PUT_LINE('Input dive date: ' || P_DIVE_DATE);
    
    SELECT c.CUST_FNAME || ', ' || c.CUST_SNAME AS CUSTOMER,
           d.DIVE_NAME,
           de.DIVE_DATE
    INTO V_CUST_NAME, V_DIVE_NAME, V_DIVE_DATE
    FROM DIVE_EVENTp de
    JOIN CUSTOMERp c ON de.CUST_ID = c.CUST_ID
    JOIN DIVEp d ON de.DIVE_ID = d.DIVE_ID
    WHERE c.CUST_ID = P_CUST_ID
    AND de.DIVE_DATE = TO_DATE(P_DIVE_DATE, 'dd/MM/yyyy');
    
    DBMS_OUTPUT.PUT_LINE('CUSTOMER DETAILS: ' || V_CUST_NAME || ' booked for the ' || V_DIVE_NAME || ' on the ' || V_DIVE_DATE || '.');
    
    EXCEPTION WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No customer found for the given custmer ID and dive date number: ' || P_CUST_ID || ', ' || P_DIVE_DATE);
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occured!' || SQLERRM);
END sp_Customer_Details;

SET SERVEROUTPUT ON;

BEGIN
    sp_Customer_Details('C115', '15/JUL/17');
END;

BEGIN
    sp_Customer_Details('C169', '15/JUL/23');
END;
//Q9
CREATE OR REPLACE FUNCTION fn_TOT_DIVE_COST
//Using customer ID asan input parameter
(P_CUST_ID IN CUSTOMERp.CUST_ID%TYPE)
RETURN VARCHAR2
IS
    //creating varibales
    V_CUST_NAME varchar(255);
    V_DIVE_COST DIVEp.DIVE_COST%TYPE;
    V_RESULT VARCHAR(1000);
BEGIN
    //outputting user input
    DBMS_OUTPUT.PUT_LINE('Input customer ID: ' || P_CUST_ID);
BEGIN
    //for loop to handle multiple rows
    //select statement to print out the customer full name and dive cost joind=ed from respective tables
    FOR rec IN (SELECT c.CUST_FNAME || ', ' || c.CUST_SNAME AS CUSTOMER,
                d.DIVE_COST
                INTO V_CUST_NAME, V_DIVE_COST
                FROM DIVE_EVENTp de
                JOIN CUSTOMERp c ON de.CUST_ID = c.CUST_ID
                JOIN DIVEp d ON de.DIVE_ID = d.DIVE_ID
                WHERE c.CUST_ID = P_CUST_ID)
    LOOP
        //taking values from the select statement and putting them into the varibles
        V_CUST_NAME := rec.CUSTOMER;
        V_DIVE_COST := rec.DIVE_COST;
        //settting variable for output
        V_RESULT := V_CUST_NAME || ' has spent a total of R' || V_DIVE_COST || ' on dives.' || CHR(10);
        RETURN V_RESULT;
    END LOOP;    
    //exception fires when the user does not input any data
    EXCEPTION WHEN NO_DATA_FOUND THEN
    RETURN 'No customer found for the given customer ID: ' || P_CUST_ID;
    WHEN OTHERS THEN
    RETURN 'An error occured!' || SQLERRM;
    END;
END fn_TOT_DIVE_COST;

SET SERVEROUTPUT ON;

DECLARE
    V_RESULT VARCHAR2(1000);
BEGIN
    V_RESULT := fn_TOT_DIVE_COST('C117');
    DBMS_OUTPUT.PUT_LINE(V_RESULT);
END;


















